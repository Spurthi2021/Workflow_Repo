name: CI/CD Pipeline with JFrog Artifactory

on:
  push:
    branches:
      - main  # Trigger when code is pushed to the 'main' branch

jobs:
  # Step 1: Build the Maven project and create the JAR
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK for Maven
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Build the Maven project and package it into a JAR file
      - name: Build with Maven
        run: mvn clean install

      # Archive the JAR file as a build artifact
     # Archive the JAR file as a build artifact
      - name: Archive JAR
        run: |
         echo "Archiving JAR file..."
         # Assume target directory contains the JAR file after building
         ls -l target/
         mvn package
    # Example: "my-app-1.0-SNAPSHOT.jar" is your artifact


  # Step 2: Upload the JAR file to JFrog Artifactory
  upload-to-jfrog:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Upload the JAR to JFrog Artifactory using curl
      - name: Upload JAR to JFrog Artifactory
        run: |
          JAR_FILE=target/my-app-1.0-SNAPSHOT.jar
          ARTIFACTORY_URL=${{ secrets.JFROG_URL }}/artifactory/my-repo/my-app/${{ github.sha }}-my-app.jar
          curl -u${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_PASSWORD }} -T $JAR_FILE $ARTIFACTORY_URL

  # Step 3: Download the JAR file from Artifactory for deployment
  download-from-jfrog:
    runs-on: ubuntu-latest
    needs: upload-to-jfrog  # This job depends on the upload-to-jfrog job

    steps:
      - name: Download JAR from Artifactory
        run: |
          JAR_FILE=my-app.jar
          ARTIFACTORY_URL=${{ secrets.JFROG_URL }}/artifactory/my-repo/my-app/${{ github.sha }}-my-app.jar
          curl -u${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_PASSWORD }} -O $ARTIFACTORY_URL
          
   
